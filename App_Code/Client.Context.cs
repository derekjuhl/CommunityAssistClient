//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;

public partial class CommunityAssistEntities : DbContext
{
    public CommunityAssistEntities()
        : base("name=CommunityAssistEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public DbSet<vw_services> vw_services { get; set; }

    public virtual int usp_Register(string lastName, string firstName, string userName, string password, string email, string homePhone)
    {
        var lastNameParameter = lastName != null ?
            new ObjectParameter("lastName", lastName) :
            new ObjectParameter("lastName", typeof(string));

        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));

        var userNameParameter = userName != null ?
            new ObjectParameter("userName", userName) :
            new ObjectParameter("userName", typeof(string));

        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));

        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));

        var homePhoneParameter = homePhone != null ?
            new ObjectParameter("HomePhone", homePhone) :
            new ObjectParameter("HomePhone", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Register", lastNameParameter, firstNameParameter, userNameParameter, passwordParameter, emailParameter, homePhoneParameter);
    }

    public virtual ObjectResult<uspGetGrants_Result> uspGetGrants(Nullable<int> personKey)
    {
        var personKeyParameter = personKey.HasValue ?
            new ObjectParameter("PersonKey", personKey) :
            new ObjectParameter("PersonKey", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetGrants_Result>("uspGetGrants", personKeyParameter);
    }

    public virtual ObjectResult<Nullable<int>> uspLogin(string userName, string userPassword)
    {
        var userNameParameter = userName != null ?
            new ObjectParameter("userName", userName) :
            new ObjectParameter("userName", typeof(string));

        var userPasswordParameter = userPassword != null ?
            new ObjectParameter("userPassword", userPassword) :
            new ObjectParameter("userPassword", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspLogin", userNameParameter, userPasswordParameter);
    }

    public virtual int uspNewGrant(Nullable<decimal> grantAmount, Nullable<int> serviceKey, Nullable<int> personKey)
    {
        var grantAmountParameter = grantAmount.HasValue ?
            new ObjectParameter("GrantAmount", grantAmount) :
            new ObjectParameter("GrantAmount", typeof(decimal));

        var serviceKeyParameter = serviceKey.HasValue ?
            new ObjectParameter("ServiceKey", serviceKey) :
            new ObjectParameter("ServiceKey", typeof(int));

        var personKeyParameter = personKey.HasValue ?
            new ObjectParameter("PersonKey", personKey) :
            new ObjectParameter("PersonKey", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspNewGrant", grantAmountParameter, serviceKeyParameter, personKeyParameter);
    }
}
